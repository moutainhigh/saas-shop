<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunny.product.mapper.ProductCommentMapper">
  <resultMap id="BaseResultMap" type="com.sunny.product.model.ProductComment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="sku_id" jdbcType="BIGINT" property="skuId" />
    <result column="property_value" jdbcType="VARCHAR" property="propertyValue" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_nick" jdbcType="VARCHAR" property="userNick" />
    <result column="user_head" jdbcType="VARCHAR" property="userHead" />
    <result column="mark" jdbcType="VARCHAR" property="mark" />
    <result column="point" jdbcType="TINYINT" property="point" />
    <result column="anonymous" jdbcType="TINYINT" property="anonymous" />
    <result column="hide" jdbcType="TINYINT" property="hide" />
    <result column="images" jdbcType="VARCHAR" property="images" />
    <result column="reply_number" jdbcType="INTEGER" property="replyNumber" />
    <result column="agree_number" jdbcType="INTEGER" property="agreeNumber" />
    <result column="buy_time" jdbcType="TIMESTAMP" property="buyTime" />
    <result column="is_fake" jdbcType="TINYINT" property="isFake" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="area_user_id" jdbcType="BIGINT" property="areaUserId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.sunny.product.model.ProductComment">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="blocks" jdbcType="LONGVARCHAR" property="blocks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, product_id, sku_id, property_value, user_id, user_nick, user_head, mark, point, 
    anonymous, hide, images, reply_number, agree_number, buy_time, is_fake, status, create_time, 
    update_time, area_user_id
  </sql>
  <sql id="Blob_Column_List">
    content, blocks
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.sunny.product.model.ProductCommentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from p_product_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.sunny.product.model.ProductCommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from p_product_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from p_product_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from p_product_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.sunny.product.model.ProductCommentExample">
    delete from p_product_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sunny.product.model.ProductComment">
    insert into p_product_comment (id, product_id, sku_id, 
      property_value, user_id, user_nick, 
      user_head, mark, point, 
      anonymous, hide, images, 
      reply_number, agree_number, buy_time, 
      is_fake, status, create_time, 
      update_time, area_user_id, content, 
      blocks)
    values (#{id,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, #{skuId,jdbcType=BIGINT}, 
      #{propertyValue,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{userNick,jdbcType=VARCHAR}, 
      #{userHead,jdbcType=VARCHAR}, #{mark,jdbcType=VARCHAR}, #{point,jdbcType=TINYINT}, 
      #{anonymous,jdbcType=TINYINT}, #{hide,jdbcType=TINYINT}, #{images,jdbcType=VARCHAR}, 
      #{replyNumber,jdbcType=INTEGER}, #{agreeNumber,jdbcType=INTEGER}, #{buyTime,jdbcType=TIMESTAMP}, 
      #{isFake,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{areaUserId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR}, 
      #{blocks,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sunny.product.model.ProductComment">
    insert into p_product_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="skuId != null">
        sku_id,
      </if>
      <if test="propertyValue != null">
        property_value,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userNick != null">
        user_nick,
      </if>
      <if test="userHead != null">
        user_head,
      </if>
      <if test="mark != null">
        mark,
      </if>
      <if test="point != null">
        point,
      </if>
      <if test="anonymous != null">
        anonymous,
      </if>
      <if test="hide != null">
        hide,
      </if>
      <if test="images != null">
        images,
      </if>
      <if test="replyNumber != null">
        reply_number,
      </if>
      <if test="agreeNumber != null">
        agree_number,
      </if>
      <if test="buyTime != null">
        buy_time,
      </if>
      <if test="isFake != null">
        is_fake,
      </if>
      status,
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="areaUserId != null">
        area_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="blocks != null">
        blocks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="skuId != null">
        #{skuId,jdbcType=BIGINT},
      </if>
      <if test="propertyValue != null">
        #{propertyValue,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userNick != null">
        #{userNick,jdbcType=VARCHAR},
      </if>
      <if test="userHead != null">
        #{userHead,jdbcType=VARCHAR},
      </if>
      <if test="mark != null">
        #{mark,jdbcType=VARCHAR},
      </if>
      <if test="point != null">
        #{point,jdbcType=TINYINT},
      </if>
      <if test="anonymous != null">
        #{anonymous,jdbcType=TINYINT},
      </if>
      <if test="hide != null">
        #{hide,jdbcType=TINYINT},
      </if>
      <if test="images != null">
        #{images,jdbcType=VARCHAR},
      </if>
      <if test="replyNumber != null">
        #{replyNumber,jdbcType=INTEGER},
      </if>
      <if test="agreeNumber != null">
        #{agreeNumber,jdbcType=INTEGER},
      </if>
      <if test="buyTime != null">
        #{buyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isFake != null">
        #{isFake,jdbcType=TINYINT},
      </if>
      #{status,jdbcType=TINYINT},
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="areaUserId != null">
        #{areaUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="blocks != null">
        #{blocks,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sunny.product.model.ProductCommentExample" resultType="java.lang.Long">
    select count(*) from p_product_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update p_product_comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=BIGINT},
      </if>
      <if test="record.skuId != null">
        sku_id = #{record.skuId,jdbcType=BIGINT},
      </if>
      <if test="record.propertyValue != null">
        property_value = #{record.propertyValue,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userNick != null">
        user_nick = #{record.userNick,jdbcType=VARCHAR},
      </if>
      <if test="record.userHead != null">
        user_head = #{record.userHead,jdbcType=VARCHAR},
      </if>
      <if test="record.mark != null">
        mark = #{record.mark,jdbcType=VARCHAR},
      </if>
      <if test="record.point != null">
        point = #{record.point,jdbcType=TINYINT},
      </if>
      <if test="record.anonymous != null">
        anonymous = #{record.anonymous,jdbcType=TINYINT},
      </if>
      <if test="record.hide != null">
        hide = #{record.hide,jdbcType=TINYINT},
      </if>
      <if test="record.images != null">
        images = #{record.images,jdbcType=VARCHAR},
      </if>
      <if test="record.replyNumber != null">
        reply_number = #{record.replyNumber,jdbcType=INTEGER},
      </if>
      <if test="record.agreeNumber != null">
        agree_number = #{record.agreeNumber,jdbcType=INTEGER},
      </if>
      <if test="record.buyTime != null">
        buy_time = #{record.buyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isFake != null">
        is_fake = #{record.isFake,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.areaUserId != null">
        area_user_id = #{record.areaUserId,jdbcType=BIGINT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.blocks != null">
        blocks = #{record.blocks,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update p_product_comment
    set id = #{record.id,jdbcType=BIGINT},
      product_id = #{record.productId,jdbcType=BIGINT},
      sku_id = #{record.skuId,jdbcType=BIGINT},
      property_value = #{record.propertyValue,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      user_nick = #{record.userNick,jdbcType=VARCHAR},
      user_head = #{record.userHead,jdbcType=VARCHAR},
      mark = #{record.mark,jdbcType=VARCHAR},
      point = #{record.point,jdbcType=TINYINT},
      anonymous = #{record.anonymous,jdbcType=TINYINT},
      hide = #{record.hide,jdbcType=TINYINT},
      images = #{record.images,jdbcType=VARCHAR},
      reply_number = #{record.replyNumber,jdbcType=INTEGER},
      agree_number = #{record.agreeNumber,jdbcType=INTEGER},
      buy_time = #{record.buyTime,jdbcType=TIMESTAMP},
      is_fake = #{record.isFake,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      area_user_id = #{record.areaUserId,jdbcType=BIGINT},
      content = #{record.content,jdbcType=LONGVARCHAR},
      blocks = #{record.blocks,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update p_product_comment
    set id = #{record.id,jdbcType=BIGINT},
      product_id = #{record.productId,jdbcType=BIGINT},
      sku_id = #{record.skuId,jdbcType=BIGINT},
      property_value = #{record.propertyValue,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      user_nick = #{record.userNick,jdbcType=VARCHAR},
      user_head = #{record.userHead,jdbcType=VARCHAR},
      mark = #{record.mark,jdbcType=VARCHAR},
      point = #{record.point,jdbcType=TINYINT},
      anonymous = #{record.anonymous,jdbcType=TINYINT},
      hide = #{record.hide,jdbcType=TINYINT},
      images = #{record.images,jdbcType=VARCHAR},
      reply_number = #{record.replyNumber,jdbcType=INTEGER},
      agree_number = #{record.agreeNumber,jdbcType=INTEGER},
      buy_time = #{record.buyTime,jdbcType=TIMESTAMP},
      is_fake = #{record.isFake,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      area_user_id = #{record.areaUserId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sunny.product.model.ProductComment">
    update p_product_comment
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="skuId != null">
        sku_id = #{skuId,jdbcType=BIGINT},
      </if>
      <if test="propertyValue != null">
        property_value = #{propertyValue,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userNick != null">
        user_nick = #{userNick,jdbcType=VARCHAR},
      </if>
      <if test="userHead != null">
        user_head = #{userHead,jdbcType=VARCHAR},
      </if>
      <if test="mark != null">
        mark = #{mark,jdbcType=VARCHAR},
      </if>
      <if test="point != null">
        point = #{point,jdbcType=TINYINT},
      </if>
      <if test="anonymous != null">
        anonymous = #{anonymous,jdbcType=TINYINT},
      </if>
      <if test="hide != null">
        hide = #{hide,jdbcType=TINYINT},
      </if>
      <if test="images != null">
        images = #{images,jdbcType=VARCHAR},
      </if>
      <if test="replyNumber != null">
        reply_number = #{replyNumber,jdbcType=INTEGER},
      </if>
      <if test="agreeNumber != null">
        agree_number = #{agreeNumber,jdbcType=INTEGER},
      </if>
      <if test="buyTime != null">
        buy_time = #{buyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isFake != null">
        is_fake = #{isFake,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="areaUserId != null">
        area_user_id = #{areaUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="blocks != null">
        blocks = #{blocks,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sunny.product.model.ProductComment">
    update p_product_comment
    set product_id = #{productId,jdbcType=BIGINT},
      sku_id = #{skuId,jdbcType=BIGINT},
      property_value = #{propertyValue,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      user_nick = #{userNick,jdbcType=VARCHAR},
      user_head = #{userHead,jdbcType=VARCHAR},
      mark = #{mark,jdbcType=VARCHAR},
      point = #{point,jdbcType=TINYINT},
      anonymous = #{anonymous,jdbcType=TINYINT},
      hide = #{hide,jdbcType=TINYINT},
      images = #{images,jdbcType=VARCHAR},
      reply_number = #{replyNumber,jdbcType=INTEGER},
      agree_number = #{agreeNumber,jdbcType=INTEGER},
      buy_time = #{buyTime,jdbcType=TIMESTAMP},
      is_fake = #{isFake,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      area_user_id = #{areaUserId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR},
      blocks = #{blocks,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sunny.product.model.ProductComment">
    update p_product_comment
    set product_id = #{productId,jdbcType=BIGINT},
      sku_id = #{skuId,jdbcType=BIGINT},
      property_value = #{propertyValue,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      user_nick = #{userNick,jdbcType=VARCHAR},
      user_head = #{userHead,jdbcType=VARCHAR},
      mark = #{mark,jdbcType=VARCHAR},
      point = #{point,jdbcType=TINYINT},
      anonymous = #{anonymous,jdbcType=TINYINT},
      hide = #{hide,jdbcType=TINYINT},
      images = #{images,jdbcType=VARCHAR},
      reply_number = #{replyNumber,jdbcType=INTEGER},
      agree_number = #{agreeNumber,jdbcType=INTEGER},
      buy_time = #{buyTime,jdbcType=TIMESTAMP},
      is_fake = #{isFake,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      area_user_id = #{areaUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>