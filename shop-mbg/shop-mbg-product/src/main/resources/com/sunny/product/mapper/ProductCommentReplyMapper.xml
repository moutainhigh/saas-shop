<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunny.product.mapper.ProductCommentReplyMapper">
  <resultMap id="BaseResultMap" type="com.sunny.product.model.ProductCommentReply">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="comment_id" jdbcType="BIGINT" property="commentId" />
    <result column="reply_id" jdbcType="BIGINT" property="replyId" />
    <result column="reply_root_id" jdbcType="BIGINT" property="replyRootId" />
    <result column="reply_head" jdbcType="VARCHAR" property="replyHead" />
    <result column="reply_nick" jdbcType="VARCHAR" property="replyNick" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_nick" jdbcType="VARCHAR" property="userNick" />
    <result column="user_head" jdbcType="VARCHAR" property="userHead" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="official" jdbcType="TINYINT" property="official" />
    <result column="anonymous" jdbcType="TINYINT" property="anonymous" />
    <result column="hide" jdbcType="TINYINT" property="hide" />
    <result column="agree_number" jdbcType="INTEGER" property="agreeNumber" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, comment_id, reply_id, reply_root_id, reply_head, reply_nick, user_id, user_nick, 
    user_head, content, official, anonymous, hide, agree_number, status, create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.sunny.product.model.ProductCommentReplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from p_product_comment_reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from p_product_comment_reply
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from p_product_comment_reply
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.sunny.product.model.ProductCommentReplyExample">
    delete from p_product_comment_reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sunny.product.model.ProductCommentReply">
    insert into p_product_comment_reply (id, comment_id, reply_id, 
      reply_root_id, reply_head, reply_nick, 
      user_id, user_nick, user_head, 
      content, official, anonymous, 
      hide, agree_number, status, 
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{commentId,jdbcType=BIGINT}, #{replyId,jdbcType=BIGINT}, 
      #{replyRootId,jdbcType=BIGINT}, #{replyHead,jdbcType=VARCHAR}, #{replyNick,jdbcType=VARCHAR}, 
      #{userId,jdbcType=BIGINT}, #{userNick,jdbcType=VARCHAR}, #{userHead,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{official,jdbcType=TINYINT}, #{anonymous,jdbcType=TINYINT}, 
      #{hide,jdbcType=TINYINT}, #{agreeNumber,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sunny.product.model.ProductCommentReply">
    insert into p_product_comment_reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="replyId != null">
        reply_id,
      </if>
      <if test="replyRootId != null">
        reply_root_id,
      </if>
      <if test="replyHead != null">
        reply_head,
      </if>
      <if test="replyNick != null">
        reply_nick,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userNick != null">
        user_nick,
      </if>
      <if test="userHead != null">
        user_head,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="official != null">
        official,
      </if>
      <if test="anonymous != null">
        anonymous,
      </if>
      <if test="hide != null">
        hide,
      </if>
      <if test="agreeNumber != null">
        agree_number,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="commentId != null">
        #{commentId,jdbcType=BIGINT},
      </if>
      <if test="replyId != null">
        #{replyId,jdbcType=BIGINT},
      </if>
      <if test="replyRootId != null">
        #{replyRootId,jdbcType=BIGINT},
      </if>
      <if test="replyHead != null">
        #{replyHead,jdbcType=VARCHAR},
      </if>
      <if test="replyNick != null">
        #{replyNick,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userNick != null">
        #{userNick,jdbcType=VARCHAR},
      </if>
      <if test="userHead != null">
        #{userHead,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="official != null">
        #{official,jdbcType=TINYINT},
      </if>
      <if test="anonymous != null">
        #{anonymous,jdbcType=TINYINT},
      </if>
      <if test="hide != null">
        #{hide,jdbcType=TINYINT},
      </if>
      <if test="agreeNumber != null">
        #{agreeNumber,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sunny.product.model.ProductCommentReplyExample" resultType="java.lang.Long">
    select count(*) from p_product_comment_reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update p_product_comment_reply
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.commentId != null">
        comment_id = #{record.commentId,jdbcType=BIGINT},
      </if>
      <if test="record.replyId != null">
        reply_id = #{record.replyId,jdbcType=BIGINT},
      </if>
      <if test="record.replyRootId != null">
        reply_root_id = #{record.replyRootId,jdbcType=BIGINT},
      </if>
      <if test="record.replyHead != null">
        reply_head = #{record.replyHead,jdbcType=VARCHAR},
      </if>
      <if test="record.replyNick != null">
        reply_nick = #{record.replyNick,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userNick != null">
        user_nick = #{record.userNick,jdbcType=VARCHAR},
      </if>
      <if test="record.userHead != null">
        user_head = #{record.userHead,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.official != null">
        official = #{record.official,jdbcType=TINYINT},
      </if>
      <if test="record.anonymous != null">
        anonymous = #{record.anonymous,jdbcType=TINYINT},
      </if>
      <if test="record.hide != null">
        hide = #{record.hide,jdbcType=TINYINT},
      </if>
      <if test="record.agreeNumber != null">
        agree_number = #{record.agreeNumber,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update p_product_comment_reply
    set id = #{record.id,jdbcType=BIGINT},
      comment_id = #{record.commentId,jdbcType=BIGINT},
      reply_id = #{record.replyId,jdbcType=BIGINT},
      reply_root_id = #{record.replyRootId,jdbcType=BIGINT},
      reply_head = #{record.replyHead,jdbcType=VARCHAR},
      reply_nick = #{record.replyNick,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      user_nick = #{record.userNick,jdbcType=VARCHAR},
      user_head = #{record.userHead,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      official = #{record.official,jdbcType=TINYINT},
      anonymous = #{record.anonymous,jdbcType=TINYINT},
      hide = #{record.hide,jdbcType=TINYINT},
      agree_number = #{record.agreeNumber,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sunny.product.model.ProductCommentReply">
    update p_product_comment_reply
    <set>
      <if test="commentId != null">
        comment_id = #{commentId,jdbcType=BIGINT},
      </if>
      <if test="replyId != null">
        reply_id = #{replyId,jdbcType=BIGINT},
      </if>
      <if test="replyRootId != null">
        reply_root_id = #{replyRootId,jdbcType=BIGINT},
      </if>
      <if test="replyHead != null">
        reply_head = #{replyHead,jdbcType=VARCHAR},
      </if>
      <if test="replyNick != null">
        reply_nick = #{replyNick,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userNick != null">
        user_nick = #{userNick,jdbcType=VARCHAR},
      </if>
      <if test="userHead != null">
        user_head = #{userHead,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="official != null">
        official = #{official,jdbcType=TINYINT},
      </if>
      <if test="anonymous != null">
        anonymous = #{anonymous,jdbcType=TINYINT},
      </if>
      <if test="hide != null">
        hide = #{hide,jdbcType=TINYINT},
      </if>
      <if test="agreeNumber != null">
        agree_number = #{agreeNumber,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sunny.product.model.ProductCommentReply">
    update p_product_comment_reply
    set comment_id = #{commentId,jdbcType=BIGINT},
      reply_id = #{replyId,jdbcType=BIGINT},
      reply_root_id = #{replyRootId,jdbcType=BIGINT},
      reply_head = #{replyHead,jdbcType=VARCHAR},
      reply_nick = #{replyNick,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      user_nick = #{userNick,jdbcType=VARCHAR},
      user_head = #{userHead,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      official = #{official,jdbcType=TINYINT},
      anonymous = #{anonymous,jdbcType=TINYINT},
      hide = #{hide,jdbcType=TINYINT},
      agree_number = #{agreeNumber,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>